
import zipfile, httplib2, cStringIO, re, csv
from urllib import urlopen
from HTMLParser import HTMLParser
from bs4 import BeautifulSoup
from random import randint


# Global Values
ALEXA_URL = 'http://s3.amazonaws.com/alexa-static/top-1m.csv.zip'

# User-Agent Strings
ua_strings = ['Mozilla/5.0 (Windows; U; MSIE 9.0; WIndows NT 9.0; en-US))','Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)','Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0)','Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7)']

# Helper Routines
def parse_alexa_rankings():

	sites = []

	with open('top-1m.csv','rb') as f:

		cr = csv.reader(f)
	
		for rank, site in cr:
			sites.append([int(rank), site.strip()])

	return sites


if __name__ == "__main__":

	sites = parse_alexa_rankings()
	#sites = [(1,'localhost')]

	log = open("results.txt","a")

	print '[*] Total sites:\t' + str(len(sites))
	log.write('======================== Date =====================\n')
	log.write('[*] Total sites:\t' + str(len(sites)) + "\n")

	for x in range(73506,75000):
		rank, site = sites[x]

		try:

			http = httplib2.Http()

			headers = {'User-Agent':ua_strings[randint(0,len(ua_strings)-1)]}

			response, content = http.request('http://' + site, 'GET', headers=headers)

			#@todo: Incapsula looks very similar, need to remove the eval
			#@todo: Compromised sites may include JS files
			matches = re.findall(r'eval\(eval|[a-zA-Z0-9]{2,}\=\"{1}[a-zA-Z0-9]{300,}|(?:\d{1,3}\,){50,}|(?:\\x[0-9a-fA-F]{1,2}){4,}',content)

			if len(matches) > 0:
				print '[!] ' + str(rank) + ' Possible EK at ' + site
				print '\tMatches:\t' + str(len(matches))

				# Write the file for later analysis
				with open(site+'-' + str(rank), 'w+') as compromised_site:
					compromised_site.write(content)

				#Log Results
				log.write('[!] Possible EK at ' + site + "\n")
				log.write('\tMatches:\t' + str(len(matches)) + "\n")

				for match in matches:
					print '\t' + match
			else:
				print '[' + str(rank) + '] Nothing found at ' + site 
				log.write('[' + str(rank) + '] Nothing found at ' + site + "\n")
		except:
			print '[' + str(rank) + '] Failed with ' + site
			log.write('[' + str(rank) + '] Failed with ' + site + "\n")